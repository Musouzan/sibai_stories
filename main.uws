CONFIG_FILE = "./settings.ini"

IFB !FOPEN(CONFIG_FILE, F_EXISTS)
  MSGBOX("Error: Configuration File Not Found")
  EXITEXIT
ENDIF

CALL lib.uws

// Ask Whether The Warrior Is Resting Or Not
SELECT MSGBOX("武将は疲労状態ですか？", BTN_YES OR BTN_NO)
  CASE BTN_YES
    WARRIOR_IS_RESTING = 1
  DEFAULT
    WARRIOR_IS_RESTING = 0
SELEND

// Ask How Much Silver Is Available
SILVER_UNIT = 500
SILVER_MAX = INPUT("使用可能な銀貨はいくらですか？", 0)
IF !CHKNUM(SILVER_MAX) OR SILVER_MAX < WARRIOR_IS_RESTING * SILVER_UNIT THEN EXITEXIT

// Ask How Many Times It Goes
COUNT_MAX = (SILVER_MAX - SILVER_MAX MOD SILVER_UNIT) / SILVER_UNIT + ABS(WARRIOR_IS_RESTING - 1)
COUNT = INPUT("何周しますか？<#CR>最大: " + COUNT_MAX + "周", COUNT_MAX)
IF !CHKNUM(COUNT) OR COUNT < 1 THEN EXITEXIT

// Ask How Long The Delay Is
DELAY = INPUT("何分後に開始しますか？", 0)
IF !CHKNUM(COUNT) OR COUNT < 0 THEN EXITEXIT
SLEEP(DELAY * 60)

NOX = GETID("NoxPlayer")
ACW(NOX)
MOUSEORG(NOX)
START_TIME = GETTIME()

PUBLIC PREVIOUS_START_TIME = GETTIME()
INTERVAL = READINIWITHOUTCOMMENT("Delay", "BetweenLoops", CONFIG_FILE)
FOR I = 0 TO COUNT - 1
  BALLOON("現在" + (I + 1) + "週目<#CR>" + CONVERTSECTOJPTIME((GETTIME() - START_TIME)) + "経過", 100, 100)  
  CALL playing.uws(CONFIG_FILE, WARRIOR_IS_RESTING)
  WARRIOR_IS_RESTING = 1
  SLEEP(INTERVAL)
NEXT

MSGBOX("所要時間: " + CONVERTSECTOJPTIME((GETTIME() - START_TIME)) + "<#CR>周回数: " + COUNT, BTN_OK)